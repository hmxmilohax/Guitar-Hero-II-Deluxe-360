#define SLIDER_LEVELS
(12)
#define OVERSHELL_AUDIO_SLIDER_HANDLERS
((focus gs_band.sld)
   (focus_component
      "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps SLIDER_LEVELS}
      {gs_guitar.sld set_num_steps SLIDER_LEVELS}
      {gs_sfx.sld set_num_steps SLIDER_LEVELS})
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_band.sld current}}
         {!=
            {options get guitar_volume_idx}
            {gs_guitar.sld current}}
         {!=
            {options get fx_volume_idx}
            {gs_sfx.sld current}}})
   (enter
      {$this disable gs_stereo.btn}
      {gs_stereo.btn set_showing FALSE}
      {stereo.chk set_showing FALSE}
      {gs_band.sld set_text 'BAND'}
      {gs_guitar.sld set_text 'GUITAR'}
      {gs_sfx.sld set_text 'SFX'}
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_band.sld
         set_current
         {options get band_volume_idx}}
      {gs_guitar.sld
         set_current
         {options get guitar_volume_idx}}
      {gs_sfx.sld
         set_current
         {options get fx_volume_idx}}
#ifndef HX_XBOX
      {stereo.chk
         set_check
         {options get_stereo}}
#endif)
   (set_volumes
      {if
         {$this slider_changed}
         {options
            set
            band_volume_idx
            {gs_band.sld current}}
         {options
            set
            guitar_volume_idx
            {gs_guitar.sld current}}
         {options
            set
            fx_volume_idx
            {gs_sfx.sld current}}})
   (slider_select_cancel
      ($component)
      {switch
         $component
         (gs_band.sld
            {$component
               set_current
               [orig_vol]})
         (gs_guitar.sld
            {$component
               set_current
               [orig_vol]})
         (gs_sfx.sld
            {$component
               set_current
               [orig_vol]})}
      {$this update_help_display}
      kDataUnhandled)
   (FOCUS_MSG
      {$this
         set
         focus_component
         {$new_focus name}}
      {$this update_help_display})
   (update_help_display
      {if_else
         {$this slider_selected}
         {helpbar
            set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjvol))}
#ifndef HX_XBOX
         {do
            {if_else
               {==
                  [focus_component]
                  "gs_stereo.btn"}
               {helpbar
                  set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))}
               {helpbar
                  set_display
                  ((fret1 help_select)
                     (fret2 help_back)
                     (strum help_updown))}}}}
#else
          {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}
#endif)
   (slider_start_msg
      ($component)
      {do
         ($vol
            {options
               get_volume_from_idx
               {$component current}})
         {switch
            $component
            (gs_band.sld
               {play_sfx
                  slider_band
                  (volume $vol)
                  (stop TRUE)})
            (gs_guitar.sld
               {play_sfx
                  slider_gtr
                  (volume $vol)
                  (stop TRUE)})
            (gs_sfx.sld
               {play_sfx
                  slider_sfx
                  (volume $vol)
                  (stop TRUE)})}})
   (SELECT_START_MSG
      {switch
         $component
         (gs_band.sld
            {$this
               set
               orig_vol
               {gs_band.sld current}})
         (gs_guitar.sld
            {$this
               set
               orig_vol
               {gs_guitar.sld current}})
         (gs_sfx.sld
            {$this
               set
               orig_vol
               {gs_sfx.sld current}})
         (gs_stereo.btn
            {stereo.chk toggle}
            {options
               set_stereo
               {stereo.chk get_check}})
         kDataUnhandled}
      {$this update_help_display}))
#define SPEED_SLIDER_HANDLERS
(
   (focus gs_guitar.sld)
   (focus_component "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps 60}
      {gs_guitar.sld set_num_steps 31}
      {gs_sfx.sld set_num_steps 41} ; was 41 steps, dropped to 31 when disallowing <100%
   )
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_guitar.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_sfx.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_band.sld current}
         }
      }
   )
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {if $towel
         {$this disable gs_guitar.sld}
      }
      {gs_guitar.sld set_current
         {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.1}}}
      }
      {gs_sfx.sld set_current
         {int {+ 0.5 {/ {+ {- $speedmod 1} 0.5} 0.05}}}
      }
      {gs_band.sld set_current
         {int {- $emulatefps 1}}
      }
      {stereo.chk set_check $focusmode}
      {gs_stereo.btn set_localized_text {localize sld_focus}}
      {$this display_speed_msg $trackspeed $speedmod $emulatefps}
      {gs_band.sld set_text 'VENUE FPS'}
      {gs_guitar.sld set_text 'NOTE SPEED'}
      {gs_sfx.sld set_text 'SONG SPEED'}
   )
   (reset_gm_title
      {gs_title.lbl set_localized_text {localize gamemodifier}}
   )
   (display_speed_msg
      ($tspd $mspd $fps)
      {if_else $focusmode
         {do
            {set $miloskipintro TRUE} {set $skipoutro TRUE} {set $notestreakmod FALSE} {set $sfx FALSE}
         }
         {do
            {set $miloskipintro FALSE} {set $skipoutro FALSE} {set $notestreakmod TRUE} {set $sfx TRUE}
         }
      }
      {gs_title.lbl set_localized_text
         {sprintf {localize speed_msg}
            {int
               {+ 0.5 {* $tspd 100}}
            }
            {int
               {+ 0.5 {* $mspd 100}}
            }
            {int
               $fps
            }
         }
      }
   )
   (set_speeds
      {if {$this slider_changed}
         {do
            {set $trackspeed
               {- {+ 1 {* {gs_guitar.sld current} 0.1}} 0.5}
            }
            {set $speedmod
               {- {+ 1 {* {gs_sfx.sld current} 0.05}} 0.5}
            }
            {set $emulatefps
               {+ 1 {gs_band.sld current}}
            }
            {$this display_speed_msg $trackspeed $speedmod $emulatefps}
         }
      }
   )
   (slider_select_cancel
      ($component)
      {switch $component
         (gs_guitar.sld {$component set_current [orig_vol]})
         (gs_sfx.sld {$component set_current [orig_vol]})
         (gs_band.sld {$component set_current [orig_vol]})
      }
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackspeed $speedmod $emulatefps}
      kDataUnhandled
   )
   (FOCUS_MSG
      {$this set focus_component {$new_focus name}}
      {$this update_help_display}
   )
   (update_help_display
      {if_else {$this slider_selected}
         {helpbar set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjspd))
         }
         {do
            {if_else {== [focus_component] "gs_stereo.btn"}
               {helpbar set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))
               }
               {helpbar set_display
                  ((fret1 help_select)
                   (fret2 help_back)
                   (strum help_updown))
               }
            }
         }
      }
   )
   (slider_start_msg
      ($component)
      {do
         {switch $component
            (gs_guitar.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}
               }
            )
            (gs_sfx.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}
               }
            )
            (gs_band.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}
               }
            )
         }
      }
   )
   (SELECT_START_MSG
      {switch $component
         (gs_guitar.sld {$this set orig_vol {gs_guitar.sld current}})
         (gs_sfx.sld {$this set orig_vol {gs_sfx.sld current}})
         (gs_band.sld {$this set orig_vol {gs_band.sld current}})
         (gs_stereo.btn {stereo.chk toggle} {set $focusmode {stereo.chk get_check}} OVERSHELL_HELP_POP_HANDLER)
      kDataUnhandled
      }
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackspeed $speedmod $emulatefps}
   )
)
#define LAG_SLIDER_HANDLERS
(
   (focus gs_guitar.sld)
   (focus_component "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {do
         ($levels
            {options get_num_sync_levels})
         ($max_sec
            {options get_max_sync_offset})
         ($step_val
            {options get_sync_offset_step})
         {gs_guitar.sld set_num_steps $levels}
         {sync_help.lbl
            set_localized_text
            {sprintf
               {localize os_videolag}
               $max_sec
               $step_val}}})
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_guitar.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_sfx.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_band.sld current}
         }
      }
   )
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_guitar.sld
         set_current
         {int
            {options get_sync_offset}}
      }
      {gs_sfx.sld set_current
         {int {+ 0.5 {/ {+ {- $speedmod 1} 0.5} 0.05}}}
      }
      {gs_band.sld set_current
         {int {- $emulatefps 1}}
      }
      {stereo.chk set_check $focusmode}
      {gs_stereo.btn set_localized_text {localize sld_overscan}}
      {$this display_speed_msg $levels $speedmod $emulatefps}
      {$this disable gs_sfx.sld}
      {gs_sfx.sld set_showing FALSE}
      {gs_band.sld set_text 'NOTHING'}
      {gs_guitar.sld set_text 'VIDEO LAG'}
   )
   (reset_gm_title
      {gs_title.lbl set_localized_text {localize gamemodifier}}
   )
   (display_speed_msg
      ($levels $mspd $fps)
      {gs_title.lbl set_localized_text
         {sprintf {localize lag_msg}
            {int
               {+ 1 {* $levels 100}}
            }
            {int
               {+ 0.5 {* $mspd 100}}
            }
            {int
               $fps
            }
         }
      }
   )
   (set_sync
      {if
         {!=
            {options get_sync_offset}
            {gs_guitar.sld current}}
         {options
            set_sync_offset
            {gs_guitar.sld current}}}
   )
   (slider_select_cancel
      ($component)
      {switch $component
         (gs_guitar.sld {$component set_current [orig_vol]})
         (gs_sfx.sld {$component set_current [orig_vol]})
         (gs_band.sld {$component set_current [orig_vol]})
      }
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $levels $speedmod $emulatefps}
      kDataUnhandled
   )
   (FOCUS_MSG
      {$this set focus_component {$new_focus name}}
      {$this update_help_display}
   )
   (update_help_display
      {if_else {$this slider_selected}
         {helpbar set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjspd))
         }
         {do
            {if_else {== [focus_component] "gs_stereo.btn"}
               {helpbar set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))
               }
               {helpbar set_display
                  ((fret1 help_select)
                   (fret2 help_back)
                   (strum help_updown))
               }
            }
         }
      }
   )
   (slider_start_msg
      ($component)
      {do
         {switch $component
            (gs_guitar.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_sync}
               }
            )
            (gs_sfx.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}
               }
            )
            (gs_band.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}
               }
            )
         }
      }
   )
   (SELECT_START_MSG
      {switch $component
         (gs_guitar.sld {$this set orig_vol {gs_guitar.sld current}})
         (gs_sfx.sld {$this set orig_vol {gs_sfx.sld current}})
         (gs_band.sld {$this set orig_vol {gs_band.sld current}})
         (gs_stereo.btn {stereo.chk toggle} {profile_mgr set_overscan {! {profile_mgr get_overscan}}})
      kDataUnhandled
      }
      {$this update_help_display}
      {$this set_sync}
      {$this display_speed_msg $levels $speedmod $emulatefps}
   )
)
#define TRACK_SLIDER_HANDLERS
(
   (focus gs_guitar.sld)
   (focus_component "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps 60}
      {gs_guitar.sld set_num_steps 31}
      {gs_sfx.sld set_num_steps 41} ; was 41 steps, dropped to 31 when disallowing <100%
   )
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_guitar.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_sfx.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_band.sld current}
         }
      }
   )
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
         {$this disable gs_sfx.sld}
         {$this disable gs_band.sld}
         {$this disable stereo.chk}
         {gs_sfx.sld set_showing FALSE}
         {gs_band.sld set_showing FALSE}
         {stereo.chk set_showing FALSE}
         {stereo.chk set_showing FALSE}
         {gs_stereo.btn set_localized_text {localize sld_focus}}
      {gs_guitar.sld set_current
         {int {+ 0.5 {/ {+ {- $trackcamx 1} 0.5} 0.1}}}
      }
      {$this display_speed_msg $trackcamx}
   )
   (reset_gm_title
      {gs_title.lbl set_localized_text {localize trackmodifier}}
   )
   (display_speed_msg
      ($trackcamx)
      {gs_title.lbl set_localized_text
         {sprintf {localize width_msg}
            {int
               {+ 0.5 {* $trackcamx 100}}
            }
         }
      }
   )
   (set_speeds
      {if {$this slider_changed}
         {do
            {set $trackcamx
               {- {+ 1 {* {gs_guitar.sld current} 0.1}} 0.5}
            }
            {$this display_speed_msg $trackcamx}
         }
      }
   )
   (slider_select_cancel
      ($component)
      {switch $component
         (gs_guitar.sld {$component set_current [orig_vol]})
         (gs_sfx.sld {$component set_current [orig_vol]})
         (gs_band.sld {$component set_current [orig_vol]})
      }
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackcamx}
      kDataUnhandled
   )
   (FOCUS_MSG
      {$this set focus_component {$new_focus name}}
      {$this update_help_display}
   )
   (update_help_display
      {if_else {$this slider_selected}
         {helpbar set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjspd))
         }
         {do
            {if_else {== [focus_component] "gs_stereo.btn"}
               {helpbar set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))
               }
               {helpbar set_display
                  ((fret1 help_select)
                   (fret2 help_back)
                   (strum help_updown))
               }
            }
         }
      }
   )
   (slider_start_msg
      ($component)
      {do
         {switch $component
            (gs_guitar.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}}
            )
         kDataUnhandled
         }
      }
   )
   (SELECT_START_MSG
      {switch $component
         (gs_guitar.sld {$this set orig_vol {gs_guitar.sld current}})
      kDataUnhandled
      }
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackcamx}
   )
)
#define COLORSWITCH_R
(
   {switch $colormenu
      (name $namecolor_r)
      (mtv $mtv_r)
      (notepopup $notepopup_r)
      (starpower $starpowercolor_r)
      (streaklabel $streaklabel_r)
      (streakstandardlabel $streakstandardlabel_r)
      (starcounter $starcounter_r)
      (cloneherostarcounter $cloneherostarcounter_r)
      (songprogress $songprogressbar_r)
      (starprogress $starprogressbar_r)
      (cloneheroscorenum $cloneheroscorenumcolor_r)
      (scorenum $scorenumcolor_r)
      (scorenumframe $scorenumframe_r)
      (gemcolor $gemcolor_r)
      (smashercolor $smashercolor_r)
      (trackrailcolor $trackrailcolor_r)
      (beatlinecolor $beatlinecolor_r)
   }
)
#define COLORSWITCH_G
(
   {switch $colormenu
      (name $namecolor_g)
      (mtv $mtv_g)
      (notepopup $notepopup_g)
      (starpower $starpowercolor_g)
      (streaklabel $streaklabel_g)
      (streakstandardlabel $streakstandardlabel_g)
      (starcounter $starcounter_g)
      (cloneherostarcounter $cloneherostarcounter_g)
      (songprogress $songprogressbar_g)
      (starprogress $starprogressbar_g)
      (scorenum $scorenumcolor_g)
      (cloneheroscorenum $cloneheroscorenumcolor_g)
      (scorenumframe $scorenumframe_g)
      (gemcolor $gemcolor_g)
      (smashercolor $smashercolor_g)
      (trackrailcolor $trackrailcolor_g)
      (beatlinecolor $beatlinecolor_g)
   }
)
#define COLORSWITCH_B
(
   {switch $colormenu
      (name $namecolor_b)
      (mtv $mtv_b)
      (notepopup $notepopup_b)
      (starpower $starpowercolor_b)
      (streaklabel $streaklabel_b)
      (streakstandardlabel $streakstandardlabel_b)
      (starcounter $starcounter_b)
      (cloneherostarcounter $cloneherostarcounter_b)
      (songprogress $songprogressbar_b)
      (starprogress $starprogressbar_b)
      (scorenum $scorenumcolor_b)
      (cloneheroscorenum $cloneheroscorenumcolor_b)
      (scorenumframe $scorenumframe_b)
      (gemcolor $gemcolor_b)
      (smashercolor $smashercolor_b)
      (trackrailcolor $trackrailcolor_b)
      (beatlinecolor $beatlinecolor_b)
   }
)
#define COLOR_SLIDER_HANDLERS
(
   (focus gs_guitar.sld)
   (focus_component "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps 100}
      {gs_guitar.sld set_num_steps 100}
      {gs_sfx.sld set_num_steps 100} ; was 41 steps, dropped to 31 when disallowing <100%
   )
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_guitar.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_sfx.sld current}
         }
         {!=
            {options get guitar_volume_idx}
            {gs_band.sld current}
         }
      }
   )
   (enter
      {$this overshell_theme} ;run the theme code on the current overshell screen
      {gs_band.sld set_text 'RED'}
      {gs_guitar.sld set_text 'GREEN'}
      {gs_sfx.sld set_text 'BLUE'}
      {gs_guitar.sld set_current
         {int {* COLORSWITCH_R 100}}
      }
      {gs_sfx.sld set_current
         {int {* COLORSWITCH_G 100}}
      }
      {gs_band.sld set_current
         {int {* COLORSWITCH_B 100}}
      }
      {stereo.chk set_showing FALSE}
      {$this disable stereo.chk}
      ;{gs_stereo.btn jitter FALSE}
      {gs_stereo.btn set_localized_text {localize sld_pickelm}}
      ;{gs_stereo.btn set_showing FALSE}
      ;{$this disable gs_stereo.btn}
      {$this display_color_msg COLORSWITCH_R COLORSWITCH_G COLORSWITCH_B}
   )
   (reset_gm_title
      {gs_title.lbl set_localized_text {localize gamemodifier}}
   )
   (display_color_msg
      ($tspd $mspd $fps)
      {gs_title.lbl set_localized_text
         {sprint
            {localize
               {switch $colormenu
                  (name "os_fontcolortitle")
                  (mtv "os_mtv")
                  (notepopup "os_popup")
                  (starpower "os_starpower")
                  (streaklabel "os_streaklabel")
                  (streakstandardlabel "os_streakstandardlabel")
                  (starcounter "os_starcounter")
                  (cloneherostarcounter "os_cloneherostarcounter")
                  (songprogress "os_songprogress")
                  (starprogress "os_starprogress")
                  (scorenum "os_scorenum")
                  (cloneheroscorenum "os_cloneheroscorenum")
                  (scorenumframe "os_scorenumframe")
                  (gemcolor "os_gemcolor")
                  (smashercolor "os_smashercolor")
                  (trackrailcolor "os_trackrailcolor")
                  (beatlinecolor "os_beatlinecolor")
               }
            }
            "\n"
            COLORSWITCH_R
            " "
            COLORSWITCH_G
            " "
            COLORSWITCH_B
         }
      }
     {gs_title.lbl set color {pack_color COLORSWITCH_R COLORSWITCH_G COLORSWITCH_B}}
   )
   (set_colors
      {if {$this slider_changed}
         {do
            {switch $colormenu
               (name {set $namecolor_r {* 0.01 {gs_band.sld current}}})
               (mtv {set $mtv_r {* 0.01 {gs_band.sld current}}})
               (notepopup {set $notepopup_r {* 0.01 {gs_band.sld current}}})
               (starpower {set $starpowercolor_r {* 0.01 {gs_band.sld current}}})
               (streaklabel {set $streaklabel_r {* 0.01 {gs_band.sld current}}})
               (streakstandardlabel {set $streakstandardlabel_r {* 0.01 {gs_band.sld current}}})
               (starcounter {set $starcounter_r {* 0.01 {gs_band.sld current}}})
               (cloneherostarcounter {set $cloneherostarcounter_r {* 0.01 {gs_band.sld current}}})
               (songprogress {set $songprogressbar_r {* 0.01 {gs_band.sld current}}})
               (starprogress {set $starprogressbar_r {* 0.01 {gs_band.sld current}}})
               (scorenum {set $scorenumcolor_r {* 0.01 {gs_band.sld current}}})
               (cloneheroscorenum {set $cloneheroscorenumcolor_r {* 0.01 {gs_band.sld current}}})
               (scorenumframe {set $scorenumframe_r {* 0.01 {gs_band.sld current}}})
               (gemcolor {set $customgemcolor TRUE} {set $gemcolor_r {* 0.01 {gs_band.sld current}}})
               (smashercolor {set $customsmashercolor TRUE} {set $smashercolor_r {* 0.01 {gs_band.sld current}}})
               (trackrailcolor {set $trackrailcolor_r {* 0.01 {gs_band.sld current}}})
               (beatlinecolor {set $beatlinecolor_r {* 0.01 {gs_band.sld current}}})
            }
            {switch $colormenu
               (name {set $namecolor_g {* 0.01 {gs_guitar.sld current}}})
               (mtv {set $mtv_g {* 0.01 {gs_guitar.sld current}}})
               (notepopup {set $notepopup_g {* 0.01 {gs_guitar.sld current}}})
               (starpower {set $starpowercolor_g {* 0.01 {gs_guitar.sld current}}})
               (streaklabel {set $streaklabel_g {* 0.01 {gs_guitar.sld current}}})
               (streakstandardlabel {set $streakstandardlabel_g {* 0.01 {gs_guitar.sld current}}})
               (starcounter {set $starcounter_g {* 0.01 {gs_guitar.sld current}}})
               (cloneherostarcounter {set $cloneherostarcounter_g {* 0.01 {gs_guitar.sld current}}})
               (songprogress {set $songprogressbar_g {* 0.01 {gs_guitar.sld current}}})
               (starprogress {set $starprogressbar_g {* 0.01 {gs_guitar.sld current}}})
               (scorenum {set $scorenumcolor_g {* 0.01 {gs_guitar.sld current}}})
               (cloneheroscorenum {set $cloneheroscorenumcolor_g {* 0.01 {gs_guitar.sld current}}})
               (scorenumframe {set $scorenumframe_g {* 0.01 {gs_guitar.sld current}}})
               (gemcolor {set $customgemcolor TRUE} {set $gemcolor_g {* 0.01 {gs_guitar.sld current}}})
               (smashercolor {set $customsmashercolor TRUE} {set $smashercolor_g {* 0.01 {gs_guitar.sld current}}})
               (trackrailcolor {set $trackrailcolor_g {* 0.01 {gs_guitar.sld current}}})
               (beatlinecolor {set $beatlinecolor_g {* 0.01 {gs_guitar.sld current}}})
            }
            {switch $colormenu
               (name {set $namecolor_b {* 0.01 {gs_sfx.sld current}}})
               (mtv {set $mtv_b {* 0.01 {gs_sfx.sld current}}})
               (notepopup {set $notepopup_b {* 0.01 {gs_sfx.sld current}}})
               (starpower {set $starpowercolor_b {* 0.01 {gs_sfx.sld current}}})
               (streaklabel {set $streaklabel_b {* 0.01 {gs_sfx.sld current}}})
               (streakstandardlabel {set $streakstandardlabel_b {* 0.01 {gs_sfx.sld current}}})
               (starcounter {set $starcounter_b {* 0.01 {gs_sfx.sld current}}})
               (cloneherostarcounter {set $cloneherostarcounter_b {* 0.01 {gs_sfx.sld current}}})
               (songprogress {set $songprogressbar_b {* 0.01 {gs_sfx.sld current}}})
               (starprogress {set $starprogressbar_b {* 0.01 {gs_sfx.sld current}}})
               (scorenum {set $scorenumcolor_b {* 0.01 {gs_sfx.sld current}}})
               (cloneheroscorenum {set $cloneheroscorenumcolor_b {* 0.01 {gs_sfx.sld current}}})
               (scorenumframe {set $scorenumframe_b {* 0.01 {gs_sfx.sld current}}})
               (gemcolor {set $customgemcolor TRUE} {set $gemcolor_b {* 0.01 {gs_sfx.sld current}}})
               (smashercolor {set $customsmashercolor TRUE} {set $smashercolor_b {* 0.01 {gs_sfx.sld current}}})
               (trackrailcolor {set $trackrailcolor_b {* 0.01 {gs_sfx.sld current}}})
               (beatlinecolor {set $beatlinecolor_b {* 0.01 {gs_sfx.sld current}}})
            }
            {$this display_color_msg COLORSWITCH_R COLORSWITCH_G COLORSWITCH_B}
         }
      }
   )
   (slider_select_cancel
      ($component)
      {switch $component
         (gs_guitar.sld {$component set_current [orig_vol]})
         (gs_sfx.sld {$component set_current [orig_vol]})
         (gs_band.sld {$component set_current [orig_vol]})
      }
      {$this update_help_display}
      {$this set_colors}
      {$this display_color_msg COLORSWITCH_R COLORSWITCH_G COLORSWITCH_B}
      kDataUnhandled
   )
   (FOCUS_MSG
      {$this set focus_component {$new_focus name}}
      {$this update_help_display}
   )
   (update_help_display
      {if_else {$this slider_selected}
         {helpbar set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjspd))
         }
         {do
            {if_else {== [focus_component] "gs_stereo.btn"}
               {helpbar set_display
                  ((fret1 help_select)
                     (fret2 help_back)
                     (strum help_updown))
               }
               {helpbar set_display
                  ((fret1 help_select)
                   (fret2 help_back)
                   (strum help_updown))
               }
            }
         }
      }
   )
   (slider_start_msg
      ($component)
      {do
         {switch $component
            (gs_guitar.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_colors}
               }
            )
            (gs_sfx.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_colors}
               }
            )
            (gs_band.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_colors}
               }
            )
         }
      }
   )
   (SELECT_START_MSG
      {switch $component
         (gs_guitar.sld {$this set orig_vol {gs_guitar.sld current}})
         (gs_sfx.sld {$this set orig_vol {gs_sfx.sld current}})
         (gs_band.sld {$this set orig_vol {gs_band.sld current}})
         (gs_stereo.btn {ui push_screen overshell_track_element_list_screen})
      kDataUnhandled
      }
      {$this update_help_display}
      {$this set_colors}
      {$this display_color_msg COLORSWITCH_R COLORSWITCH_G COLORSWITCH_B}
   )
)